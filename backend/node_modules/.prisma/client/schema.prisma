// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String       @unique
  password    String
  role        String       @default("student")
  enrollments Enrollment[]
  comments    Comment[]
}

model Course {
  id            Int          @id @default(autoincrement())
  title         String       @unique
  description   String
  thumbnail     String
  price         Float
  originalprice Float
  modules       Module[]
  enrollments   Enrollment[]
}

model Module {
  id       Int     @id @default(autoincrement())
  title    String
  courseId Int
  course   Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)
  videos   Video[]
}

model Video {
  id        Int       @id @default(autoincrement())
  title     String
  url       String
  thumbnail String
  moduleId  Int
  module    Module    @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  comments  Comment[]
}

model Enrollment {
  id       Int    @id @default(autoincrement())
  userId   Int
  courseId Int
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  // Add unique constraint to prevent duplicate enrollments
  @@unique([userId, courseId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  comment   String
  createdAt DateTime @default(now())

  // Relations
  userId  Int
  videoId Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  video   Video @relation(fields: [videoId], references: [id], onDelete: Cascade)
}
